- helperstscope = [:helpers, :label, :data_search]
- # NOTE altering taxon concept defaults if its not searchable but keeping
- #      variable intact, in case it is still needed... we could just remove it
- if @taxon_concept && TaxonData.is_clade_searchable?(@taxon_concept) && !@clade_has_no_data
  - taxon_concept_id = @taxon_concept.id
  - taxon_name = { value: @taxon_concept.title_canonical, data: {} }
- else
  - taxon_concept_id = nil
  - taxon_name = { value: nil }
  - if @taxon_concept
    - if !TaxonData.is_clade_searchable?(@taxon_concept) || @clade_has_no_data
      - taxon_name[:data] = { value_removed_placeholder: I18n.t(:taxon_name_placeholder_value_removed,
        taxon_group: @taxon_concept.title_canonical,
        scope: helperstscope) }
%h3.assistive= t('.header')
= form_tag data_search_path, method: 'get', class: 'copy', id: 'traitbank_search' do
  = hidden_field_tag :taxon_concept_id, (taxon_concept_id)
  .vital
    %fieldset
      %dl
        %dt
          = label_tag :attribute, I18n.t(:attribute, scope: helperstscope)
        %dd
          -# TODO - || [] is lame here, fix:
          = select_tag(:attribute, options_for_select(@attribute_options || [], @attribute || @attribute_default))
  .extras{data: { summary_intro: I18n.t("data_search.form.input_summary_intro"),
    show: I18n.t("data_search.form.search_tools_show_link"),
    hide: I18n.t("data_search.form.search_tools_hide_link")}}
    .suggestions
      %h3= t('.search_suggestions_header')
      %h4= t('.search_suggestions_subheader_colon')
      %ul
        - unless @suggested_searches.blank?
          - @suggested_searches.each do |suggestion|
            %li= link_to t(".#{suggestion[:label_key]}"),
              data_search_path(suggestion[:params])
    %h3= t('.refine_search_header')
    %fieldset
      %h4= t('.search_within_taxon_group_header')
      %p= raw t('.search_within_taxon_group_intro_with_count',
        count: number_with_delimiter(TaxonData::MAXIMUM_DESCENDANTS_FOR_CLADE_SEARCH),
        contact_us_tech_url: contact_us_path(subject: 'Technical'))
      %dl
        %dt
          = label_tag :taxon_name, I18n.t(:taxon_name, scope: helperstscope)
        %dd
          = autocomplete_field :autocomplete, 'q', autocomplete_taxon_search_path,
            name: 'taxon_name', 'min-length' => 3, type: 'search',
            update_elements: { id: '#taxon_concept_id' },
            value: taxon_name[:value],
            placeholder: I18n.t(:taxon_name_placeholder, scope: helperstscope),
            data: taxon_name[:data]
          %p= I18n.t(:taxon_name_more, scope: helperstscope)
    %fieldset
      %h4= t('.search_value_or_range_header')
      %dl
        %dt
          = label_tag :q, I18n.t(:q, scope: helperstscope)
        %dd
          = search_field_tag :q, @querystring,
            placeholder: I18n.t(:q_placeholder, scope: helperstscope),
            data: {disabled_placeholder: I18n.t(:q_placeholder_disabled,
            scope: helperstscope)}
          %p= I18n.t(:q_more, scope: helperstscope)
      %h5= t('.or_range_header').html_safe
      %dl.range
        %dt
          = label_tag :min, I18n.t(:min, scope: helperstscope)
        %dd
          = search_field_tag :min, @min_value,
            placeholder: I18n.t(:min_placeholder, scope: helperstscope),
            data: {disabled_placeholder: I18n.t(:min_placeholder_disabled,
            scope: helperstscope)}
      %dl.range
        %dt
          = label_tag :max, I18n.t(:max, scope: helperstscope)
        %dd
          = search_field_tag :max, @max_value,
            placeholder: I18n.t(:max_placeholder, scope: helperstscope),
            data: {disabled_placeholder: I18n.t(:max_placeholder_disabled,
            scope: helperstscope)}
      %dl.range
        %dt
          = label_tag :unit, I18n.t(:unit, scope: helperstscope)
        %dd
          - unit_options = { I18n.t(:not_specified) => nil }.merge(Hash[ @units_for_select.collect{ |u| [ u.label, u.uri ] } ])
          = select_tag :unit, options_for_select(unit_options, @unit)
    %fieldset.sort
      %h4= t('.sort_header')
      %dl
        %dt
          = label_tag :sort, I18n.t(:sort_by_label)
        %dd
          - sort_options = { I18n.t(:sort_by_value_ascending) => 'asc',
            I18n.t(:sort_by_value_descending) => 'desc' }
          = select_tag :sort, options_for_select(sort_options, @sort)
  %fieldset.actions
    = submit_tag I18n.t(:search)
    = link_to t('.new_search_link'), data_search_path
