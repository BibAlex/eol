- hidden = false unless hidden == true
- style = hidden ? 'display: none' : nil
- unless @range_data.blank?
  .ranges_subtab{ style: style }
    .help_text
      %p= I18n.t(:data_ranges_subtab_help_text)
    .header_underlined
      %h3= I18n.t(:data_ranges)
    %table.standard
      %caption.assistive= I18n.t(:data_overview_table_caption)
      %thead
        %tr
          %th= I18n.t('activerecord.attributes.user_added_data.predicate')
          %th= I18n.t('values')
          %th= I18n.t('record_count')
          %th= I18n.t('taxa_count')
      - @range_data.each_with_index do |range_data, index|
        %tr
          %td
            - if range_data[:attribute].is_a?(KnownUri)
              = link_to display_uri(range_data[:attribute], capitalize: true), data_search_path(attribute: range_data[:attribute].uri, sort: 'desc', taxon_concept_id: @taxon_page.id)
            - else
              = display_uri(range_data[:attribute], capitalize: true)
          %td
            - min_value = format_data_value(range_data[:min].object.to_s)
            - if range_data[:min].unit_of_measure != range_data[:max].unit_of_measure
              - uri_components = EOL::Sparql.explicit_measurement_uri_components(range_data[:min].unit_of_measure_uri)
              - min_value = min_value.to_s + " " + display_uri(uri_components)
            = raw [ min_value, display_text_for_data_point_uri(range_data[:max]) ].join(' to ')
          %td= range_data[:count_measurements]
          %td= range_data[:count_taxa]
